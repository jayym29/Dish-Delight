{"ast":null,"code":"var _jsxFileName = \"/Users/jayce/Development/code/phase-5/Dish Delight/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadUser = () => {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (loggedInUser) {\n        setUser(JSON.parse(loggedInUser));\n      }\n      setLoading(false);\n    };\n    window.onload = loadUser();\n\n    // Cleanup function to remove the event listener\n    return () => {\n      window.onload = null;\n    };\n  }, []);\n  const login = async (name, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          password\n        })\n      });\n      const data = await response.json();\n      console.log(data.id, \"    lllaa    \", data);\n      if (response.ok) {\n        setUser({\n          name,\n          password,\n          id: data.id\n        });\n        localStorage.setItem(\"user\", JSON.stringify({\n          name,\n          password,\n          id: data.id\n        }));\n        toast.success(\"Logged in successfully\");\n        return {\n          success: true\n        };\n      } else {\n        toast.error(data.message);\n        return {\n          success: false,\n          message: data.message\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: \"Server error, please try again later\"\n      };\n    }\n  };\n  const signup = async (name, email, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser({\n          name,\n          password,\n          id: data.id\n        });\n        localStorage.setItem(\"user\", JSON.stringify({\n          name,\n          password,\n          id: data.id\n        }));\n        toast.success(\"Signed up successfully\");\n        return {\n          success: true\n        };\n      } else {\n        toast.error(data.message);\n        return {\n          success: false,\n          message: data.message\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: \"Server error, please try again later\"\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    toast.success(\"Logged out successfully\");\n    localStorage.removeItem(\"user\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      signup,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","loadUser","loggedInUser","localStorage","getItem","JSON","parse","window","onload","login","name","password","response","fetch","method","headers","body","stringify","data","json","console","log","id","ok","setItem","success","error","message","signup","email","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jayce/Development/code/phase-5/Dish Delight/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadUser = () => {\r\n      const loggedInUser = localStorage.getItem(\"user\");\r\n      if (loggedInUser) {\r\n        setUser(JSON.parse(loggedInUser));\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    window.onload = loadUser();\r\n\r\n    // Cleanup function to remove the event listener\r\n    return () => {\r\n      window.onload = null;\r\n    };\r\n  }, []);\r\n  const login = async (name, password) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      console.log(data.id, \"    lllaa    \", data);\r\n      if (response.ok) {\r\n        setUser({ name, password, id: data.id });\r\n        localStorage.setItem(\r\n          \"user\",\r\n          JSON.stringify({ name, password, id: data.id })\r\n        );\r\n        toast.success(\"Logged in successfully\");\r\n        return { success: true };\r\n      } else {\r\n        toast.error(data.message);\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: \"Server error, please try again later\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const signup = async (name, email, password) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setUser({ name, password, id: data.id });\r\n        localStorage.setItem(\r\n          \"user\",\r\n          JSON.stringify({ name, password, id: data.id })\r\n        );\r\n        toast.success(\"Signed up successfully\");\r\n        return { success: true };\r\n      } else {\r\n        toast.error(data.message);\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: \"Server error, please try again later\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    toast.success(\"Logged out successfully\");\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, signup, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}