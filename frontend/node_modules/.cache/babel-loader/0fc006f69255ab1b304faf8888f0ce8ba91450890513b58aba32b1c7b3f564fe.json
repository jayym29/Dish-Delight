{"ast":null,"code":"var _jsxFileName = \"/Users/jayce/Development/code/phase-5/Dish Delight/frontend/src/context/RecipeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/createContext();\nexport const RecipeProvider = ({\n  children\n}) => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [savedRecipes, setSavedRecipes] = useState([]);\n  const {\n    user,\n    loading\n  } = useContext(AuthContext);\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n  useEffect(() => {\n    // Fetch saved recipes when user changes or is available\n    if (user) {\n      fetchSavedRecipes();\n    }\n  }, [user]); // Dependency array includes user\n  const fetchRecipes = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/recipes\");\n      const data = await response.json();\n      setRecipes(data);\n    } catch (error) {\n      console.error(\"Error fetching recipes:\", error);\n    }\n  };\n  const fetchSavedRecipes = async () => {\n    const response1 = await fetch(\"http://localhost:5000/saved-recipes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: user\n      }) // Include the user object\n    });\n    const data1 = await response1.json();\n    console.log(data1, \"     data1\");\n    setSavedRecipes(data1);\n    return data1;\n  };\n  const addRecipe = async recipe => {\n    try {\n      const response = await fetch(\"http://localhost:5000/addrecipe\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...recipe,\n          user\n        }) // Include the user object\n      });\n      const newRecipe = await response.json();\n      setRecipes([...recipes, newRecipe]);\n      toast.success(\"Recipe added successfully\");\n    } catch (error) {\n      console.error(\"Error adding recipe:\", error);\n      toast.error(\"Error adding recipe\");\n    }\n  };\n  const updateRecipe = async (id, updatedRecipe) => {\n    console.log(updatedRecipe, \"updatedRecipe\");\n    try {\n      await fetch(`http://localhost:5000/recipes/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...updatedRecipe,\n          user\n        }) // Include the user object\n      });\n      const ingredientsArray = updatedRecipe.ingredients.map(ingredient => ({\n        name: ingredient\n      }));\n      updatedRecipe.ingredients = ingredientsArray;\n      setRecipes(recipes.map(recipe => recipe.id === id ? updatedRecipe : recipe));\n      toast.success(\"Recipe updated successfully\");\n    } catch (error) {\n      console.error(\"Error updating recipe:\", error);\n      toast.error(\"Error updating recipe\");\n    }\n  };\n  const deleteRecipe = async id => {\n    try {\n      await fetch(`http://localhost:5000/recipes/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user\n        }) // Include the user object\n      });\n      setRecipes(recipes.filter(recipe => recipe.id !== id));\n      toast.success(\"Recipe deleted successfully\");\n    } catch (error) {\n      console.error(\"Error deleting recipe:\", error);\n      toast.error(\"Error deleting recipe\");\n    }\n  };\n  const saveRecipe = async recipeId => {\n    try {\n      const response = await fetch(\"http://localhost:5000/save-recipe\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          recipe_id: recipeId,\n          user\n        }) // Include the user object\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Check if the recipe was removed or added based on the message\n        if (data.message === \"Recipe removed from favorites.\") {\n          // Remove recipe from savedRecipes\n          setSavedRecipes(savedRecipes.filter(r => r.id !== recipeId));\n          console.log(\"Recipe removed from favorites\");\n        } else if (data.message === \"Recipe saved successfully\") {\n          // Add recipe to savedRecipes\n          setSavedRecipes([...savedRecipes, recipes.find(r => r.id === recipeId)]);\n        }\n        toast.success(data.message);\n      } else {\n        console.error(data.message || \"Error saving recipe\");\n        toast.error(data.message || \"Error saving recipe\");\n      }\n    } catch (error) {\n      console.error(\"Server error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n    value: {\n      recipes,\n      savedRecipes,\n      fetchSavedRecipes,\n      addRecipe,\n      updateRecipe,\n      deleteRecipe,\n      saveRecipe\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeProvider, \"KLnTM6RtSKYe4ZoRZzbCr9GvlLA=\");\n_c = RecipeProvider;\nvar _c;\n$RefreshReg$(_c, \"RecipeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","AuthContext","toast","jsxDEV","_jsxDEV","RecipeContext","RecipeProvider","children","_s","recipes","setRecipes","savedRecipes","setSavedRecipes","user","loading","fetchRecipes","fetchSavedRecipes","response","fetch","data","json","error","console","response1","method","headers","body","JSON","stringify","data1","log","addRecipe","recipe","newRecipe","success","updateRecipe","id","updatedRecipe","ingredientsArray","ingredients","map","ingredient","name","deleteRecipe","filter","saveRecipe","recipeId","recipe_id","ok","message","r","find","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jayce/Development/code/phase-5/Dish Delight/frontend/src/context/RecipeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const RecipeContext = createContext();\r\n\r\nexport const RecipeProvider = ({ children }) => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [savedRecipes, setSavedRecipes] = useState([]);\r\n  const { user, loading } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    fetchRecipes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch saved recipes when user changes or is available\r\n    if (user) {\r\n      fetchSavedRecipes();\r\n    }\r\n  }, [user]); // Dependency array includes user\r\n  const fetchRecipes = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/recipes\");\r\n      const data = await response.json();\r\n      setRecipes(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching recipes:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchSavedRecipes = async () => {\r\n    const response1 = await fetch(\"http://localhost:5000/saved-recipes\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ user: user }), // Include the user object\r\n    });\r\n    const data1 = await response1.json();\r\n    console.log(data1, \"     data1\");\r\n    setSavedRecipes(data1);\r\n\r\n    return data1;\r\n  };\r\n  const addRecipe = async (recipe) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/addrecipe\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...recipe, user }), // Include the user object\r\n      });\r\n      const newRecipe = await response.json();\r\n\r\n      setRecipes([...recipes, newRecipe]);\r\n      toast.success(\"Recipe added successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error adding recipe:\", error);\r\n      toast.error(\"Error adding recipe\");\r\n    }\r\n  };\r\n\r\n  const updateRecipe = async (id, updatedRecipe) => {\r\n    console.log(updatedRecipe, \"updatedRecipe\");\r\n    try {\r\n      await fetch(`http://localhost:5000/recipes/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...updatedRecipe, user }), // Include the user object\r\n      });\r\n      const ingredientsArray = updatedRecipe.ingredients.map((ingredient) => ({\r\n        name: ingredient,\r\n      }));\r\n      updatedRecipe.ingredients = ingredientsArray;\r\n      setRecipes(\r\n        recipes.map((recipe) => (recipe.id === id ? updatedRecipe : recipe))\r\n      );\r\n      toast.success(\"Recipe updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error updating recipe:\", error);\r\n      toast.error(\"Error updating recipe\");\r\n    }\r\n  };\r\n\r\n  const deleteRecipe = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/recipes/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ user }), // Include the user object\r\n      });\r\n      setRecipes(recipes.filter((recipe) => recipe.id !== id));\r\n      toast.success(\"Recipe deleted successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting recipe:\", error);\r\n      toast.error(\"Error deleting recipe\");\r\n    }\r\n  };\r\n\r\n  const saveRecipe = async (recipeId) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/save-recipe\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ recipe_id: recipeId, user }), // Include the user object\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Check if the recipe was removed or added based on the message\r\n        if (data.message === \"Recipe removed from favorites.\") {\r\n          // Remove recipe from savedRecipes\r\n          setSavedRecipes(savedRecipes.filter((r) => r.id !== recipeId));\r\n          console.log(\"Recipe removed from favorites\");\r\n        } else if (data.message === \"Recipe saved successfully\") {\r\n          // Add recipe to savedRecipes\r\n          setSavedRecipes([\r\n            ...savedRecipes,\r\n            recipes.find((r) => r.id === recipeId),\r\n          ]);\r\n        }\r\n        toast.success(data.message);\r\n      } else {\r\n        console.error(data.message || \"Error saving recipe\");\r\n        toast.error(data.message || \"Error saving recipe\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Server error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RecipeContext.Provider\r\n      value={{\r\n        recipes,\r\n        savedRecipes,\r\n        fetchSavedRecipes,\r\n        addRecipe,\r\n        updateRecipe,\r\n        deleteRecipe,\r\n        saveRecipe,\r\n      }}\r\n    >\r\n      {children}\r\n    </RecipeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}